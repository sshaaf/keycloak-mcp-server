name: Build and Test

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.svg'
      - '**/*.ico'
      - '**/*.webp'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.svg'
      - '**/*.ico'
      - '**/*.webp'
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: keycloak-mcp-server-jar
          path: build/libs/*.jar

  build-uber-jar:
    name: Build Uber JAR
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Uber JAR
        run: ./gradlew quarkusBuild -Dquarkus.package.type=uber-jar

      - name: Upload Uber JAR
        uses: actions/upload-artifact@v4
        with:
          name: keycloak-mcp-server-uber-jar
          path: build/keycloak-mcp-server-0.1.jar
  native-linux:
    name: Build Native Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Build Native Image
        run: |
          ./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=false -Dquarkus.native.builder-image.build=false
          # Ensure build output data is available for GraalVM reporting
          mkdir -p $HOME/.native-image
          # Copy from the native-image-source-jar directory
          if [ -f "build/keycloak-mcp-server-native-image-source-jar/build-artifacts.json" ]; then
            cp build/keycloak-mcp-server-native-image-source-jar/build-artifacts.json $HOME/.native-image/
          fi
          # Also try the native-image-reports directory as fallback
          if [ -d "build/native-image-reports" ]; then
            cp -r build/native-image-reports/* $HOME/.native-image/ || true
          fi

      - name: Upload Linux Native Executable
        uses: actions/upload-artifact@v4
        with:
          name: keycloak-mcp-server-linux
          path: build/keycloak-mcp-server-native-image-source-jar/keycloak-mcp-server-0.1
          retention-days: 7

  native-macos:
    name: Build Native macOS (Apple Silicon)
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Build Native Image
        run: |
          ./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=false -Dquarkus.native.builder-image.build=false
          # Ensure build output data is available for GraalVM reporting
          mkdir -p $HOME/.native-image
          # Copy from the native-image-source-jar directory
          if [ -f "build/keycloak-mcp-server-native-image-source-jar/build-artifacts.json" ]; then
            cp build/keycloak-mcp-server-native-image-source-jar/build-artifacts.json $HOME/.native-image/
          fi
          # Also try the native-image-reports directory as fallback
          if [ -d "build/native-image-reports" ]; then
            cp -r build/native-image-reports/* $HOME/.native-image/ || true
          fi

      - name: Upload macOS Native Executable
        uses: actions/upload-artifact@v4
        with:
          name: keycloak-mcp-server-macos
          path: build/keycloak-mcp-server-native-image-source-jar/keycloak-mcp-server-0.1
          retention-days: 7

  native-windows:
    name: Build Native Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Set up Visual Studio Developer Command Prompt
        uses: microsoft/setup-msbuild@v1.1

      - name: Set up Visual C++ Build Tools
        shell: powershell
        run: |
          # Add Visual C++ build tools to PATH
          $vsPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath
          $vcvarsallPath = Join-Path $vsPath "VC\Auxiliary\Build\vcvarsall.bat"
          
          # Create a batch file to set up the environment
          Set-Content -Path setup-env.bat -Value "@call `"$vcvarsallPath`" x64"
          
          # Execute the batch file and export the environment variables
          cmd /c "setup-env.bat && set > env-vars.txt"
          
          # Read the environment variables and set them for the current process
          Get-Content env-vars.txt | ForEach-Object {
            if ($_ -match "^([^=]+)=(.*)$") {
              $name = $matches[1]
              $value = $matches[2]
              # Set environment variable for the current process
              [System.Environment]::SetEnvironmentVariable($name, $value)
              # Also set it for GitHub Actions
              echo "$name=$value" >> $env:GITHUB_ENV
            }
          }

      - name: Build Native Image
        run: |
          ./gradlew build --system-prop quarkus.package.type=native --system-prop quarkus.native.container-build=false --system-prop quarkus.native.builder-image.build=false
          # Ensure build output data is available for GraalVM reporting
          $nativeImageDir = Join-Path $HOME ".native-image"
          New-Item -Path $nativeImageDir -ItemType Directory -Force
          
          # Copy from the native-image-source-jar directory
          $buildArtifactsJson = "build/keycloak-mcp-server-native-image-source-jar/build-artifacts.json"
          if (Test-Path -Path $buildArtifactsJson) {
            Copy-Item -Path $buildArtifactsJson -Destination $nativeImageDir -Force -ErrorAction SilentlyContinue
          }
          
          # Also try the native-image-reports directory as fallback
          if (Test-Path -Path "build/native-image-reports") {
            try {
              Get-ChildItem -Path "build/native-image-reports" | Copy-Item -Destination $nativeImageDir -Recurse -Force -ErrorAction SilentlyContinue
            } catch {
              Write-Host "Warning: Could not copy all files from build/native-image-reports: $_"
            }
          }

      - name: Upload Windows Native Executable
        uses: actions/upload-artifact@v4
        with:
          name: keycloak-mcp-server-windows
          path: build/keycloak-mcp-server-native-image-source-jar/keycloak-mcp-server-0.1.exe
          retention-days: 7
