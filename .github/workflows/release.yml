name: Release

on:
  push:
    branches:
      - 'release-**'
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

jobs:
  # --- Build job for creating artifacts ---
  build:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Install dependencies and build
      run: |
        ./gradlew build
        ./gradlew quarkusBuild -Dquarkus.package.type=uber-jar
    
    - name: Upload artifact for release job
      uses: actions/upload-artifact@v4
      with:
        name: keycloak-mcp-server-uber-jar
        path: build/keycloak-mcp-server-*-runner.jar

  release:
    name: Create GitHub Release
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write # To create release tags and releases
      issues: write # To comment on issues and PRs
      pull-requests: write # To comment on issues and PRs
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # We need to fetch all history and tags for semantic-release to work
        fetch-depth: 0
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Prepare release assets directory
      run: mkdir -p release-assets
      
    - name: Semantic Release
      id: semantic_release
      uses: cycjimmy/semantic-release-action@v4
      with:
        extra_plugins: |
          @semantic-release/git
          @semantic-release/github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Get version from semantic-release
      id: get_version
      run: |
        if [ "${{ steps.semantic_release.outputs.new_release_published }}" = "true" ]; then
          echo "VERSION=${{ steps.semantic_release.outputs.new_release_version }}" >> $GITHUB_ENV
          echo "New version: ${{ steps.semantic_release.outputs.new_release_version }}"
        else
          echo "No new version published"
          exit 0
        fi
    
    - name: Prepare release assets with version
      if: steps.semantic_release.outputs.new_release_published == 'true'
      run: |
        cp keycloak-mcp-server-uber-jar/* release-assets/keycloak-mcp-server-${VERSION}-uber.jar
    
    - name: Upload release assets
      if: steps.semantic_release.outputs.new_release_published == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.VERSION }}
        name: Release v${{ env.VERSION }}
        draft: false
        files: |
          release-assets/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}